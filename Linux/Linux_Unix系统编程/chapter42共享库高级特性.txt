chapter42共享库高级特性
	42.1 动态加载库
		dlopen API使得程序能够在运行时打开一个共享库，根据名字在库中搜索一个函数，然后调用这个函数。
		dlopen()
		dlsym()
		dlclose()
		dlerror()
		要在Linux上使用dlopen API构建程序必须要指定-ldl 选项以便与libdl库链接起来。
		42.1.1 打开共享库：dlopen()
			#include <dlfcn.h>
			void *dlopen(const char *libfilename, int flags);
		42.1.2 错误诊断:dlerror()
			#include <dlfcn.h>
			const char *dlerror(void);
		42.1.3 获取符号的地址:dlsym()
			#include <dlfcn.h>
			void *dlsym(void *handle, char *symbol);
			
			1:如果symbol是一个变量的名称，那么可以将dlsym()的返回值赋给一个合适的指针类型，并通过反引用该指针来得到变量的值。
				int *ip;
				ip = (int *)dlsym(symbol,"myvar");
				if(ip != NULL)
					printf("value is %d\n", *ip);
			2:如果symbol是一个函数的名称，那么可以使用dlsym()返回的指针来调用该函数。可以将dlsym()返回的值存储到一个类型合适的指针中、
				int (*funcp)(int);
				*(void**)(&funcp)=dlsym(handle, symbol);
				res = (*funcp)(somearg);
		42.1.4 关闭共享库:dlclose()
				#include <dlfcn.h>
				int dlclose(void *handle);
